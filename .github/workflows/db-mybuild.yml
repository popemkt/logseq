name: Deploy DB Version to Cloud

on:
  push:
    branches: ["db-mybuild"]

env:
  CLOJURE_VERSION: "1.11.1.1413"
  NODE_VERSION: "18"
  JAVA_VERSION: "11"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: ${{ env.CLOJURE_VERSION }}
  
      - name: Fetch yarn deps
        run: yarn cache clean && yarn install --frozen-lockfile

      - name: Set Build Environment Variables
        run: |
          echo "ENABLE_FILE_SYNC_PRODUCTION=false" >> $GITHUB_ENV
      - name: Build Released-Web
        run: |
          yarn gulp:build && clojure -M:cljs release app  --config-merge '{:compiler-options {:source-map-include-sources-content false :source-map-detail-level :symbols}}'
          rsync -avz --exclude node_modules --exclude android --exclude ios ./static/ ./public/static/
          ls -lR ./public

      - name: Compile CLJS
        run: yarn install && gulp build && yarn cljs:release-electron

      - name: Cache Static File
        uses: actions/upload-artifact@v3
        with:
          name: static
          path: static

  build-windows:
    runs-on: windows-latest
    needs: [ build-and-deploy ]
    steps:
      - name: Download The Static Asset
        uses: actions/download-artifact@v3
        with:
          name: static
          path: static

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # - name: Cache Node Modules
      #   uses: actions/cache@v3
      #   with:
      #    path: |
      #      **/node_modules
      #    key: ${{ runner.os }}-node-modules

      - name: Deps Electron app
        run: yarn install
        working-directory: ./static

      - name: Fix Deps Electron app
        run: yarn run postinstall
        working-directory: ./static/node_modules/dugite/

      - name: Build/Release Electron app
        run: yarn electron:make
        working-directory: ./static

      - name: Save Artifact
        run: |
          mkdir builds
          mv static\out\make\squirrel.windows\x64\*.exe    builds\Logseq-win-x64-${{ steps.ref.outputs.version }}.exe
          mv static\out\make\squirrel.windows\x64\*.nupkg  builds\Logseq-win-x64-${{ steps.ref.outputs.version }}-full.nupkg
          mv static\out\make\zip\win32\x64\*.zip           builds\Logseq-win-x64-${{ steps.ref.outputs.version }}.zip
          mv static\out\make\squirrel.windows\x64\RELEASES builds\RELEASES

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: logseq-win64-builds
          path: builds
        